#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM     1
#define FUN  2
#define GAME    3
#define GAMENUM 4

//#include "keypos.h"       // Used to define keys for combos
//#include "combos.dtsi"    // Include after defining layers
//#include "tapdance.dtsi"  // Tap dance combos

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};


//*
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "COLEMAK";
// -----------------------------------------------------------------------------------------
//   |  Q  |  W  |  F  |  P  |  B  |    |  J  |  L   |  U  |  Y  | BKSP|
//   |Sft-A|  R  |  S  |  I  |  G  |    |  K  |  N   |  E  |  I  |  O  |
//   |  Z  |  X  |  C  |  D  |  V  |    |  M  |  H   |  ,  |  .  |  /  |
//               |     |Gm-Sys| SPC |   | ENT |L-Num | ALT |
                        bindings = <
   &kp Q           &kp W    &kp F      &kp P     &kp B         &kp J     &kp L    &kp I       &kp O     &kp BSPC   
   &kp A           &kp R    &kp S      &kp I     &kp G         &kp K     &kp N    &kp E       &kp I     &kp O
   &kp Z           &kp X    &kp C      &kp D     &kp V         &kp M     &kp H    &kp COMMA   &kp DOT   &kp FSLH
                            &trans     &to2      &kp SPACE     &kp RET   &mo 1    &kp RALT 
                        >;
                };

                num_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |F1-  |F2-  |F3-  |F4-  |F5-  |   |  -  |  7  |  8  |  9  |  *  |
// |F6-  |F7-  |F8-  |F9-  |F0-  |   |  +  |  4  |  5  |  6  |  /  |
// |     |     |     |     |     |   |  0  |  1  |  2  |  3  |  .  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans       &trans       &trans       &trans       &trans         &kp MINUS   &kp N7     &kp N8     &kp N9   &kp STAR 
   &trans       &trans       &trans       &trans       &trans         &kp PLUS    &kp N4     &kp N5     &kp N6   &kp FSLH 
   &trans       &trans       &trans       &trans       &trans         &kp N0      &kp N1     &kp N2     &kp N3   &kp DOT 
                             &to 0        &to 0        &kp SPACE      &kp RET     &trans     &kp RALT
                        >;
                };

		fun_layer {
                        label = "SYSTEM";
// -----------------------------------------------------------------------------------------
// |   1   |  2  |  3  |  4  |   5   |   |     |     |     |     |     |
// |   6   |  7  |  8  |  9  |   0   |   |     |     |     |     |     |
// |L-Ctrl |  Z  |  X  |  C  |   V   |   |     |     |     |     |     |
//                    |L-Def|L-GNum| SPC |     |     |     |     |
                        bindings = <
   &kp N1      &kp N2   &kp N3   &kp N4   &kp N5      &trans       &trans       &trans       &trans       &trans
   &kp N6      &kp N7   &kp N8   &kp N9   &kp N0      &trans       &trans       &trans       &trans       &trans
   &kp LCTRL   &kp Z    &kp X    &kp C    &kp V       &trans       &trans       &trans       &trans       &trans
                        &to 0    &to3     &kp SPACE   &trans       &trans       &trans
                        >; 
                };

                game_layer {
                        label = "GAMING";
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |   R   |   |     |     |     |     |     |
// |L-Shft|  A  |  S  |  D  |   F   |   |     |     |     |     |     |
// |L-Ctrl|  Z  |  X  |  C  |   V   |   |     |     |     |     |     |
//                    |L-Def|L-GNum| SPC |    | ENT |     |     |
                        bindings = <
   &kp ESC     &kp Q   &kp W   &kp E   &kp R       &trans       &trans       &trans       &trans       &trans
   &kp LSHFT   &kp A   &kp S   &kp D   &kp F       &trans       &trans       &trans       &trans       &trans
   &kp LCTRL   &kp Z   &kp X   &kp C   &kp V       &trans       &trans       &trans       &trans       &trans
                       &to 0   &mo 4   &kp SPACE   &kp RET      &trans       &trans
                        >; 
                };
		gamenum_layer {
                        label = "GAMING";
// -----------------------------------------------------------------------------------------
// |   1   |  2  |  3  |  4  |   5   |   |     |     |     |     |     |
// |   6   |  7  |  8  |  9  |   0   |   |     |     |     |     |     |
// |L-Ctrl |  Z  |  X  |  C  |   V   |   |     |     |     |     |     |
//                    |L-Def|L-GNum| SPC |     | ENT |     | ALT |
                        bindings = <
   &kp N1      &kp N2   &kp N3   &kp N4   &kp N5      &trans       &trans       &trans       &trans       &trans
   &kp N6      &kp N7   &kp N8   &kp N9   &kp N0      &trans       &trans       &trans       &trans       &trans
   &kp LCTRL   &kp Z    &kp X    &kp C    &kp V       &trans       &trans       &trans       &trans       &trans
                       &trans   &trans   &kp SPACE   &trans       &trans       &trans
                        >; 
                };
        };
};

*//


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    
  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI 
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH 
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans 
    &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans 
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
     &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR 
    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH 
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE 
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};